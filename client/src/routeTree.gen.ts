/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PersonalDetailsImport } from './routes/personal-details'
import { Route as MenuImport } from './routes/menu'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as OrdersIndexImport } from './routes/orders.index'
import { Route as CartIndexImport } from './routes/cart.index'
import { Route as AddressesIndexImport } from './routes/addresses.index'
import { Route as OrdersOrderIdImport } from './routes/orders.$orderId'
import { Route as CartCheckoutImport } from './routes/cart.checkout'
import { Route as AuthSignInImport } from './routes/auth.sign-in'
import { Route as AuthRegisterImport } from './routes/auth.register'
import { Route as AddressesNewImport } from './routes/addresses.new'
import { Route as MenuProductProductIdImport } from './routes/menu.product.$productId'
import { Route as MenuCategoryAllImport } from './routes/menu.category.all'
import { Route as MenuCategoryCategoryIdImport } from './routes/menu.category.$categoryId'
import { Route as AddressesAddressIdEditImport } from './routes/addresses.$addressId.edit'

// Create/Update Routes

const PersonalDetailsRoute = PersonalDetailsImport.update({
  id: '/personal-details',
  path: '/personal-details',
  getParentRoute: () => rootRoute,
} as any)

const MenuRoute = MenuImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrdersIndexRoute = OrdersIndexImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => rootRoute,
} as any)

const CartIndexRoute = CartIndexImport.update({
  id: '/cart/',
  path: '/cart/',
  getParentRoute: () => rootRoute,
} as any)

const AddressesIndexRoute = AddressesIndexImport.update({
  id: '/addresses/',
  path: '/addresses/',
  getParentRoute: () => rootRoute,
} as any)

const OrdersOrderIdRoute = OrdersOrderIdImport.update({
  id: '/orders/$orderId',
  path: '/orders/$orderId',
  getParentRoute: () => rootRoute,
} as any)

const CartCheckoutRoute = CartCheckoutImport.update({
  id: '/cart/checkout',
  path: '/cart/checkout',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AddressesNewRoute = AddressesNewImport.update({
  id: '/addresses/new',
  path: '/addresses/new',
  getParentRoute: () => rootRoute,
} as any)

const MenuProductProductIdRoute = MenuProductProductIdImport.update({
  id: '/product/$productId',
  path: '/product/$productId',
  getParentRoute: () => MenuRoute,
} as any)

const MenuCategoryAllRoute = MenuCategoryAllImport.update({
  id: '/category/all',
  path: '/category/all',
  getParentRoute: () => MenuRoute,
} as any)

const MenuCategoryCategoryIdRoute = MenuCategoryCategoryIdImport.update({
  id: '/category/$categoryId',
  path: '/category/$categoryId',
  getParentRoute: () => MenuRoute,
} as any)

const AddressesAddressIdEditRoute = AddressesAddressIdEditImport.update({
  id: '/addresses/$addressId/edit',
  path: '/addresses/$addressId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/personal-details': {
      id: '/personal-details'
      path: '/personal-details'
      fullPath: '/personal-details'
      preLoaderRoute: typeof PersonalDetailsImport
      parentRoute: typeof rootRoute
    }
    '/addresses/new': {
      id: '/addresses/new'
      path: '/addresses/new'
      fullPath: '/addresses/new'
      preLoaderRoute: typeof AddressesNewImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/cart/checkout': {
      id: '/cart/checkout'
      path: '/cart/checkout'
      fullPath: '/cart/checkout'
      preLoaderRoute: typeof CartCheckoutImport
      parentRoute: typeof rootRoute
    }
    '/orders/$orderId': {
      id: '/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/orders/$orderId'
      preLoaderRoute: typeof OrdersOrderIdImport
      parentRoute: typeof rootRoute
    }
    '/addresses/': {
      id: '/addresses/'
      path: '/addresses'
      fullPath: '/addresses'
      preLoaderRoute: typeof AddressesIndexImport
      parentRoute: typeof rootRoute
    }
    '/cart/': {
      id: '/cart/'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartIndexImport
      parentRoute: typeof rootRoute
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/addresses/$addressId/edit': {
      id: '/addresses/$addressId/edit'
      path: '/addresses/$addressId/edit'
      fullPath: '/addresses/$addressId/edit'
      preLoaderRoute: typeof AddressesAddressIdEditImport
      parentRoute: typeof rootRoute
    }
    '/menu/category/$categoryId': {
      id: '/menu/category/$categoryId'
      path: '/category/$categoryId'
      fullPath: '/menu/category/$categoryId'
      preLoaderRoute: typeof MenuCategoryCategoryIdImport
      parentRoute: typeof MenuImport
    }
    '/menu/category/all': {
      id: '/menu/category/all'
      path: '/category/all'
      fullPath: '/menu/category/all'
      preLoaderRoute: typeof MenuCategoryAllImport
      parentRoute: typeof MenuImport
    }
    '/menu/product/$productId': {
      id: '/menu/product/$productId'
      path: '/product/$productId'
      fullPath: '/menu/product/$productId'
      preLoaderRoute: typeof MenuProductProductIdImport
      parentRoute: typeof MenuImport
    }
  }
}

// Create and export the route tree

interface MenuRouteChildren {
  MenuCategoryCategoryIdRoute: typeof MenuCategoryCategoryIdRoute
  MenuCategoryAllRoute: typeof MenuCategoryAllRoute
  MenuProductProductIdRoute: typeof MenuProductProductIdRoute
}

const MenuRouteChildren: MenuRouteChildren = {
  MenuCategoryCategoryIdRoute: MenuCategoryCategoryIdRoute,
  MenuCategoryAllRoute: MenuCategoryAllRoute,
  MenuProductProductIdRoute: MenuProductProductIdRoute,
}

const MenuRouteWithChildren = MenuRoute._addFileChildren(MenuRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/menu': typeof MenuRouteWithChildren
  '/personal-details': typeof PersonalDetailsRoute
  '/addresses/new': typeof AddressesNewRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/cart/checkout': typeof CartCheckoutRoute
  '/orders/$orderId': typeof OrdersOrderIdRoute
  '/addresses': typeof AddressesIndexRoute
  '/cart': typeof CartIndexRoute
  '/orders': typeof OrdersIndexRoute
  '/addresses/$addressId/edit': typeof AddressesAddressIdEditRoute
  '/menu/category/$categoryId': typeof MenuCategoryCategoryIdRoute
  '/menu/category/all': typeof MenuCategoryAllRoute
  '/menu/product/$productId': typeof MenuProductProductIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/menu': typeof MenuRouteWithChildren
  '/personal-details': typeof PersonalDetailsRoute
  '/addresses/new': typeof AddressesNewRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/cart/checkout': typeof CartCheckoutRoute
  '/orders/$orderId': typeof OrdersOrderIdRoute
  '/addresses': typeof AddressesIndexRoute
  '/cart': typeof CartIndexRoute
  '/orders': typeof OrdersIndexRoute
  '/addresses/$addressId/edit': typeof AddressesAddressIdEditRoute
  '/menu/category/$categoryId': typeof MenuCategoryCategoryIdRoute
  '/menu/category/all': typeof MenuCategoryAllRoute
  '/menu/product/$productId': typeof MenuProductProductIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/menu': typeof MenuRouteWithChildren
  '/personal-details': typeof PersonalDetailsRoute
  '/addresses/new': typeof AddressesNewRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/cart/checkout': typeof CartCheckoutRoute
  '/orders/$orderId': typeof OrdersOrderIdRoute
  '/addresses/': typeof AddressesIndexRoute
  '/cart/': typeof CartIndexRoute
  '/orders/': typeof OrdersIndexRoute
  '/addresses/$addressId/edit': typeof AddressesAddressIdEditRoute
  '/menu/category/$categoryId': typeof MenuCategoryCategoryIdRoute
  '/menu/category/all': typeof MenuCategoryAllRoute
  '/menu/product/$productId': typeof MenuProductProductIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/menu'
    | '/personal-details'
    | '/addresses/new'
    | '/auth/register'
    | '/auth/sign-in'
    | '/cart/checkout'
    | '/orders/$orderId'
    | '/addresses'
    | '/cart'
    | '/orders'
    | '/addresses/$addressId/edit'
    | '/menu/category/$categoryId'
    | '/menu/category/all'
    | '/menu/product/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/menu'
    | '/personal-details'
    | '/addresses/new'
    | '/auth/register'
    | '/auth/sign-in'
    | '/cart/checkout'
    | '/orders/$orderId'
    | '/addresses'
    | '/cart'
    | '/orders'
    | '/addresses/$addressId/edit'
    | '/menu/category/$categoryId'
    | '/menu/category/all'
    | '/menu/product/$productId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/menu'
    | '/personal-details'
    | '/addresses/new'
    | '/auth/register'
    | '/auth/sign-in'
    | '/cart/checkout'
    | '/orders/$orderId'
    | '/addresses/'
    | '/cart/'
    | '/orders/'
    | '/addresses/$addressId/edit'
    | '/menu/category/$categoryId'
    | '/menu/category/all'
    | '/menu/product/$productId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  MenuRoute: typeof MenuRouteWithChildren
  PersonalDetailsRoute: typeof PersonalDetailsRoute
  AddressesNewRoute: typeof AddressesNewRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthSignInRoute: typeof AuthSignInRoute
  CartCheckoutRoute: typeof CartCheckoutRoute
  OrdersOrderIdRoute: typeof OrdersOrderIdRoute
  AddressesIndexRoute: typeof AddressesIndexRoute
  CartIndexRoute: typeof CartIndexRoute
  OrdersIndexRoute: typeof OrdersIndexRoute
  AddressesAddressIdEditRoute: typeof AddressesAddressIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  MenuRoute: MenuRouteWithChildren,
  PersonalDetailsRoute: PersonalDetailsRoute,
  AddressesNewRoute: AddressesNewRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthSignInRoute: AuthSignInRoute,
  CartCheckoutRoute: CartCheckoutRoute,
  OrdersOrderIdRoute: OrdersOrderIdRoute,
  AddressesIndexRoute: AddressesIndexRoute,
  CartIndexRoute: CartIndexRoute,
  OrdersIndexRoute: OrdersIndexRoute,
  AddressesAddressIdEditRoute: AddressesAddressIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/menu",
        "/personal-details",
        "/addresses/new",
        "/auth/register",
        "/auth/sign-in",
        "/cart/checkout",
        "/orders/$orderId",
        "/addresses/",
        "/cart/",
        "/orders/",
        "/addresses/$addressId/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/menu": {
      "filePath": "menu.tsx",
      "children": [
        "/menu/category/$categoryId",
        "/menu/category/all",
        "/menu/product/$productId"
      ]
    },
    "/personal-details": {
      "filePath": "personal-details.tsx"
    },
    "/addresses/new": {
      "filePath": "addresses.new.tsx"
    },
    "/auth/register": {
      "filePath": "auth.register.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth.sign-in.tsx"
    },
    "/cart/checkout": {
      "filePath": "cart.checkout.tsx"
    },
    "/orders/$orderId": {
      "filePath": "orders.$orderId.tsx"
    },
    "/addresses/": {
      "filePath": "addresses.index.tsx"
    },
    "/cart/": {
      "filePath": "cart.index.tsx"
    },
    "/orders/": {
      "filePath": "orders.index.tsx"
    },
    "/addresses/$addressId/edit": {
      "filePath": "addresses.$addressId.edit.tsx"
    },
    "/menu/category/$categoryId": {
      "filePath": "menu.category.$categoryId.tsx",
      "parent": "/menu"
    },
    "/menu/category/all": {
      "filePath": "menu.category.all.tsx",
      "parent": "/menu"
    },
    "/menu/product/$productId": {
      "filePath": "menu.product.$productId.tsx",
      "parent": "/menu"
    }
  }
}
ROUTE_MANIFEST_END */
